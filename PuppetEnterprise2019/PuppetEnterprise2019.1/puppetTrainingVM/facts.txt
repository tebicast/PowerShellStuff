the Puppet agent runs facter to get a list of facts about the system to send to the Puppet master as it requests a catalog. 
The Puppet master then uses these facts to help compile that catalog before sending it back to the Puppet agent to be applied.

You can access a standard set of facts with the facter command. Adding the -p flag will include any custom facts that you may have installed on the Puppet master and synchronized with the agent during the pluginsync step of a Puppet run. 
We'll pass this facter -p command to less so you can scroll through the output in your terminal.
    facter -p | less
    facter -p os
You can drill down into this structure by using dots (.) to specify the key at each child level of the hash, for example:
    facter -p os.family

All facts are automatically made available within your manifests. You can access the value of any fact via the $facts hash, following the 
$facts['fact_name'] syntax. To access structured facts, you can chain more names using the same bracket indexing syntax. 
For example, the os.family fact you accessed above is available within a manifest as.
    $facts['os']['family']

