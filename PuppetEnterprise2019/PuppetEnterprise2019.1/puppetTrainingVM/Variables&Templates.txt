Puppet supports two templating languages, Embedded Puppet (EPP) and Embedded Ruby (ERB).
EPP templates were released in Puppet 4 to provide a Puppet-native templating language that would offer several improvements over the ERB templates that had been inherited from the Ruby world. 
EPP is now the preferred method

Best practice is to begin your EPP template with a parameter tag. This declares which parameters your template will accept and allows you to set their default values. 
A template will work without this tag, but explicitly declaring your variables here makes your template more readable and easier to maintain.

The file resource type has two different parameters that can be used to define the content of the managed file: source and content.
source takes the URI of a source file like the ones we've placed in our module's files directory. 
The content parameter takes a string as a value and sets the content of the managed file to that string.

To set a file's content with a template, we'll use Puppet's built-in epp() function to parse our 
EPP template file and use the resulting string as the value for the content parameter.

This epp() function takes two arguments: First, a file reference in the format '<MODULE>/<TEMPLATE_NAME>' that specifies the template file to use. 
Second, a hash of variable names and values to pass to the template.

<%- | $port,
      $default_character,
      $default_message,
| -%>
# This file is managed by Puppet. Please do not make manual changes.
---
:default_character: <%= $default_character %>
:default_message:   <%= $default_message %>
:sinatra_settings:
  :port: <%= $port %>

The bars (|) surrounding the list of parameters are a special syntax that define the parameters tag.
The <% and %> are the opening and closing tag delimiters that distinguish EPP tags from the body of the file. 
Those hyphens (-) next to the tag delimiters will remove indentation and whitespace before and after the tag. 
This allows you to put this parameter tag at the beginning of the file, for example, without the newline character after the tag creating an empty line at the beginning of the output file.

The <%= ... %> tags we use to insert our variables into the file are called expression-printing tags. 
These tags insert the content of a Puppet expression, in this case the string values assigned to our variables.